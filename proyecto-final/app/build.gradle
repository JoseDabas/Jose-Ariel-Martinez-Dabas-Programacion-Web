/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
}

group = 'proyecto'
version = '1.0-SNAPSHOT'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'io.javalin:javalin:5.6.1'
    implementation 'org.slf4j:slf4j-simple:2.0.7'
    implementation "io.javalin:javalin-rendering:5.6.0"
    implementation 'org.thymeleaf:thymeleaf:3.1.1.RELEASE'

    //Dependencias de jakarta.persitence
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'org.hibernate.orm:hibernate-core:6.1.5.Final'

    implementation 'com.h2database:h2:2.2.224'
    
    implementation 'org.postgresql:postgresql:42.3.1'

    implementation 'org.hibernate:hibernate-core:5.4.32.Final'
    implementation 'javax.persistence:javax.persistence-api:2.2'

    implementation 'org.jasypt:jasypt:1.9.3'
    implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'

    implementation 'io.github.cdimascio:java-dotenv:5.2.2'

    //Gson es una biblioteca de Google que permite convertir objetos Java a su representaci√≥n JSON y viceversa.
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation("com.fasterxml.jackson.core:jackson-databind:2.15.0")

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5-jakarta:2.15.0'
    
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

java{
    sourceCompatibility = '17'
}

application {
    // Define the main class for the application.
    mainClass = 'proyecto.Main'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

run{
    standardInput = System.in
}

